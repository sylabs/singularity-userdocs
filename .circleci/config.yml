version: 2.1

orbs:
  go: circleci/go@1.7
  aws-cli: circleci/aws-cli@2.0.3

parameters:
  go-version:
    type: string
    default: '1.22.6'

executors:
  node:
    docker:
      - image: node:20-slim
  python:
    docker:
      - image: python:3.12-bullseye
  ubuntu-machine:
    machine:
     image: ubuntu-2404:2024.05.1

commands:
  install-deps-apt:
    parameters:
      sudo:
        type: boolean
        default: true
    steps:
      - run:
          name: Update package indexes
          command: <<# parameters.sudo >>sudo <</ parameters.sudo >>apt-get -q update
      - run:
          name: Install singularity dependencies
          command: |-
            <<# parameters.sudo >>sudo <</ parameters.sudo >>DEBIAN_FRONTEND=noninteractive apt-get -q install -y autoconf \
              automake \
              build-essential \
              cryptsetup \
              fuse2fs \
              git \
              libfuse-dev \
              libglib2.0-dev \
              libseccomp-dev \
              libtool \
              pkg-config \
              python3-venv \
              squashfs-tools \
              uidmap \
              zlib1g-dev
  install-latex-apt:
    parameters:
        sudo:
          type: boolean
          default: true
    steps:
      - run:
          name: Install LaTeX environment
          command: <<# parameters.sudo >>sudo <</ parameters.sudo >>DEBIAN_FRONTEND=noninteractive apt-get -q install -y texlive-latex-extra latexmk
  install-deps-python:
    steps:
      - run:
          name: Create venv
          command: python3 -m venv sphinx-venv
      - run:
          name: Install python dependencies
          command: |
            source sphinx-venv/bin/activate
            pip install setuptools 'sphinx<6' sphinx-rtd-theme rstcheck pygments m2r2

  init-submodules:
    steps:
      - run:
          name: Initialize git submodules
          command: git submodule update --init --recursive

jobs:
  lint_markdown:
    executor: node
    steps:
      - checkout
      - run:
          name: Install markdownlint
          command: npm install -g markdownlint-cli
      - run:
          name: Check for Lint
          command: markdownlint .

  check_rst:
    executor: python
    steps:
      - checkout
      - install-deps-python
      - run:
          name: Lint rst
          command: |
            source sphinx-venv/bin/activate
            rstcheck --ignore-languages c,c++ --report-level warning *.rst

  make_docs:
    executor: ubuntu-machine
    steps:
      - checkout
      - install-deps-apt
      - install-latex-apt
      - install-deps-python
      - go/install:
          version: << pipeline.parameters.go-version >>
      - init-submodules
      - run:
          name: make html
          command: |
            source sphinx-venv/bin/activate
            make html
      - store_artifacts:
          path: _build/html
          destination: html
      - run:
          name: make pdf
          command: |
            source sphinx-venv/bin/activate
            make latexpdf
      - store_artifacts:
          path: _build/latex
          destination: pdf
      - run:
          name: make epub
          command: |
            source sphinx-venv/bin/activate
            make epub
      - store_artifacts:
          path: _build/epub
          destination: epub

  publish_docs:
    executor: ubuntu-machine
    steps:
      - checkout
      - install-deps-apt
      - install-latex-apt
      - install-deps-python
      - go/install:
          version: << pipeline.parameters.go-version >>
      - init-submodules
      - run:
          name: make pdf
          command: |
            source sphinx-venv/bin/activate
            make latexpdf
      - run:
          name: make html
          command: |
            source sphinx-venv/bin/activate
            make html
      - run:
          name: make epub
          command: |
            source sphinx-venv/bin/activate
            make epub
      - aws-cli/setup
      - run:
          name: publish to s3
          command: |
            aws s3 sync _build/html s3://ce-docs.sylabs.io/guides/${CIRCLE_BRANCH}/user-guide --delete
            aws s3 cp _build/latex/*.pdf s3://ce-docs.sylabs.io/guides/${CIRCLE_BRANCH}/user-guide.pdf
            aws s3 cp _build/epub/*.epub s3://ce-docs.sylabs.io/guides/${CIRCLE_BRANCH}/user-guide.epub

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint_markdown
      - check_rst
      - make_docs:
          requires:
            - check_rst
          filters:
            branches:
              ignore:
                - main
                - /\d\.\d+/
      - publish_docs:
          requires:
            - check_rst
          filters:
            branches:
              only:
                - main
                - /\d\.\d+/
